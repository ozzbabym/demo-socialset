{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialog","message","DialogItem","path","id","active","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagePage","dialogsElements","dialogsData","map","key","messageElements","MessagesData","newMessageText","isAuth","dialogs","dialogsItems","messages","value","sendMessage","newMessageElement","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,2B,uFCWnKC,EANC,SAACC,GACf,OAAO,yBAAKC,UAAWC,IAAEC,QAASH,EAAMI,U,QCQ3BC,EAXI,SAACL,GAClB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACE,yBAAKN,UAAWC,IAAEC,OAAS,IAAMD,IAAEM,QACjC,kBAAC,IAAD,CAASC,GAAIH,GAAON,EAAMU,Q,yCCC1BC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdN,SAACd,GACrB,OACE,0BAAMgB,SAAUhB,EAAMiB,cAElB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAASX,GAAcD,KAAK,oBAAoBa,YAAY,uBAEnG,6BAEE,yFA0CKC,EAjCC,SAACxB,GAEf,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAC1B,GAAD,OAC1C,kBAAC,EAAD,CAAYO,KAAMP,EAAOO,KAAMoB,IAAK3B,EAAOI,GAAIA,GAAIJ,EAAOI,QAGxDwB,EAAkBN,EAAMO,aAAaH,KAAI,SAACzB,GAAD,OAC3C,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAAS0B,IAAK1B,EAAQG,QAG1BkB,EAAMQ,eAS9B,OAAIjC,EAAMkC,OAGR,yBAAKjC,UAAWC,IAAEiC,SAChB,yBAAKlC,UAAWC,IAAEkC,cAAeT,GACjC,yBAAK1B,UAAWC,IAAEmC,UAAWN,GAC7B,kBAAClB,EAAD,CAAqBG,SAXC,SAACsB,GAE3BtC,EAAMuC,YAAYD,EAAME,uBAGC,kBAAC,IAAD,CAAU/B,GAAI,Y,wBCX1BgC,sBACbC,aAzBsB,SAACjB,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAOI,SAACiB,GAC1B,MAAO,CAELJ,YAAa,SAACN,GACZU,EAASC,YAAwBX,SAarCY,IAFaJ,CAEMjB","file":"static/js/4.2557fa31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2jGNv\",\"dialogsItems\":\"Dialogs_dialogsItems__3J0o4\",\"messages\":\"Dialogs_messages__1eqGg\",\"active\":\"Dialogs_active__2Ya7o\",\"message\":\"Dialogs_message__2Bd3p\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}\r\n  </div>;\r\n};\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport {Textarea} from '../../components/common/FormsControls/FormsControls'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm =(props)=>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n      \r\n        <Field component={Textarea} validate={[required,maxLength50]} name=\"newMessageElement\" placeholder=\"Enter your message\"/>\r\n        \r\n        <div>\r\n          \r\n          <button >Написать</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  \r\n  let state = props.messagePage;\r\n\r\n  let dialogsElements = state.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElements = state.MessagesData.map((message) => (\r\n    <Message message={message.message} key={message.id}/>\r\n  ));\r\n\r\n  let newMessageElement = state.newMessageText;\r\n\r\n  \r\n\r\n  let addNewMessageChange = (value) => {\r\n  \r\n  props.sendMessage(value.newMessageElement);\r\n  };\r\n\r\n  if(!props.isAuth) return <Redirect to={'/login'} />\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messageElements}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessageChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  addMessageActionCreator,\r\n  \r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagePage: state.messagePage\r\n    \r\n  };\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    sendMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// let DialogsCointainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect )(Dialogs )\r\n"],"sourceRoot":""}