{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","content","item","src","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElement","PostsData","reverse","map","post","key","id","createRef","postsBlock","value","addPost","newPostText","posts","ProfileStatusWithHooks","Component","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","ProfileDataFormReduxForm","profile","error","style","formSummaryError","createField","Input","type","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","conatctTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","photo","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","MyPostsConteiner","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.76992115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3AjNT\",\"photo\":\"ProfileInfo_photo__yC6KC\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2OWbb\",\"contact\":\"ProfileInfo_contact__3UaZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1CaXi\",\"posts\":\"MyPosts_posts__TN7Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3P4L_\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <div>\r\n        <div className={s.item}>\r\n          <img src=\"https://c.wallhere.com/photos/1e/7d/1600x1200_px_action_adventure_alien_Aliens_Avatar_fantasy_fi-1635355.jpg!d\" />\r\n          {props.message}\r\n          <div>\r\n            <span>Like </span> {props.like}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm=(props)=>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field \r\n          name={\"newPostText\"} component={Textarea} placeholder={'Post message'} \r\n          validate={[required ,maxLength10 ]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>add post</button>\r\n          \r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo ((props) => {\r\n  //reverse перевернул все посты\r\n  let postsElement = [...props.PostsData].reverse().map((post) => (\r\n    <Post key={post.id} message={post.message} like={post.like} />\r\n  ));\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (value) => {\r\n    props.addPost(value.newPostText);\r\n    \r\n  };\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElement}</div>\r\n    </div>\r\n  );\r\n})\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  // let stateWithSetState=useState(true)\r\n  let [editMode,setEditMode]=useState(false)\r\n  let [status,setStatus]=useState(props.status)\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status)\r\n  },[props.status])\r\n\r\n  const activateEditMode=()=>{\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode=()=>{\r\n    \r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n}\r\n\r\nconst onStatusChange = (e)=>{\r\n  setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        { !editMode &&\r\n          <div>\r\n            <b>Status: </b><span onDoubleClick={activateEditMode}>\r\n              {props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        }\r\n        {editMode && (\r\n          <div>\r\n            <input\r\n               onBlur={deactivateEditMode}\r\n              autoFocus={true}\r\n              onChange={onStatusChange}\r\n              value={status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  \r\n\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n    \r\n    \r\n  };\r\n\r\n  activateEditMode=()=>{\r\n    \r\n      this.setState({\r\n          editMode:true\r\n      })\r\n    \r\n    \r\n  }\r\n\r\n  deactivateEditMode=()=>{\r\n    \r\n    this.setState({\r\n        editMode:false\r\n    })\r\n    this.props.updateStatus(this.state.status)\r\n}\r\n\r\nonStatusChange = (e)=>{\r\n  this.setState({\r\n    status: e.currentTarget.value\r\n  })\r\n  \r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState){\r\n  if (prevProps.status!==this.props.status){\r\n  this.setState({\r\n    status: this.props.status\r\n  })}\r\n\r\n  \r\n  console.log(\"Component\")\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {!this.state.editMode && (\r\n            <div>\r\n              <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n            </div>\r\n          )}\r\n          {this.state.editMode && (\r\n            <div>\r\n              <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n               value={this.state.status} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react'\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst ProfileDataForm =({handleSubmit,profile,error})=>{\r\n    return <form onSubmit={handleSubmit} >\r\n    <div><button >Save</button></div>\r\n    {error && <div className={style.formSummaryError}>{error}</div>}\r\n      \r\n  <div>\r\n    <b>Full name</b> : {createField('Full Name', [],\"fullName\",Input)}\r\n  </div>\r\n  <div>\r\n    <b>Looking for a job</b> : \r\n    {createField('', [],\"Lucking for a job\",Input, {type: 'checkbox'})}\r\n  </div>\r\n  \r\n    <div>\r\n      <b>My profissional skills</b> :{\" \"}\r\n      {createField('My Profession Skills', [],\"lookingForAJobDescription\",Textarea)}\r\n    </div>\r\n\r\n\r\n  <div>\r\n    <b>About me</b> :\r\n    {createField('About Me', [],\"aboutMe\",Textarea)}\r\n  </div>\r\n  <div>\r\n    <b>Contacts</b> :\r\n    {Object.keys(profile.contacts).map((key) => {\r\n      return ( \r\n        <div key = {key} className={s.contact}>\r\n            <b>{key}:{createField(key, [],\"contacts.\" + key,Input)}</b>\r\n             </div>\r\n      );\r\n    })}\r\n  </div>\r\n</form>\r\n\r\n  }\r\n\r\n  const ProfileDataFormReduxForm= reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n  export default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  let [editMode,setEditMode]=useState(false)\r\n\r\n\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData)=>{\r\n    saveProfile(formData).then(\r\n      ()=>{\r\n        setEditMode(false)\r\n      }\r\n    )\r\n    \r\n   \r\n    \r\n    \r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.photo}>\r\n        <img src=\"https://fsb.zobj.net/crop.php?r=uEDtONmQiHTBf8m1XAv1MqjMMP0WjO2F1HNDq4xqlN9OATMrqJhDFvGYf80SGATpMGtEJASI0nEKZz-ceg255n9-HpXZpQdCy8XFqBK7Y2_J9JDhjNfF_YvlxGORHxSbuDffdEjFIm6HAgaP\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode \r\n        ? <ProfileDataForm initialValues ={profile} profile={profile} onSubmit={onSubmit}/> \r\n        : <ProfileData goToEditMode={()=>{setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n\r\n      {/* <ProfileData profile={profile} /> */}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData =({profile, isOwner, goToEditMode})=>{\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n  <div>\r\n    <b>Full name</b> : {profile.fullName}\r\n  </div>\r\n  <div>\r\n    <b>Looking for a job</b> : {profile.lookingForAJob ? \"yes\" : \"No\"}\r\n  </div>\r\n  \r\n    <div>\r\n      <b>My profissional skills</b> :\r\n      {profile.lookingForAJobDescription}\r\n    </div>\r\n  \r\n\r\n  <div>\r\n    <b>About me</b> : {profile.aboutMe}\r\n  </div>\r\n  <div>\r\n    <b>Contacts</b> :{\" \"}\r\n    {Object.keys(profile.contacts).map((key) => {\r\n      return (\r\n        <Contact\r\n          key={key}\r\n          conatctTitle={key}\r\n          contactValue={profile.contacts[key]}\r\n        />\r\n      );\r\n    })}\r\n  </div>\r\n</div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ conatctTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{conatctTitle}</b>: {contactValue}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport {\r\n  \r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    PostsData: state.profilePage.PostsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nlet MyPostsConteiner = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsConteiner;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsConteiner from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return (\r\n    <div >\r\n      <ProfileInfo \r\n                saveProfile={props.saveProfile} \r\n                savePhoto={props.savePhoto} \r\n                isOwner={props.isOwner} \r\n                profile={props.profile} \r\n                status={props.status} \r\n                updateStatus={props.updateStatus}/>\r\n      <MyPostsConteiner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if(this.props.match.params.userId != prevProps.match.params.userId){\r\n      this.refreshProfile()\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} \r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile} \r\n        status={this.props.status} \r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        \r\n        />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n  \r\n});\r\n\r\nexport default compose(connect(mapStateToProps,{ getUserProfile, getStatus, updateStatus,savePhoto, saveProfile }),withRouter)(ProfileContainer)\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps,{ getUserProfile })(\r\n//   WithUrlDataContainerComponent\r\n// );\r\n"],"sourceRoot":""}